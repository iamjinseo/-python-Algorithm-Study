# 2×n 타일링 2
#입력 : 첫째 줄에 n이 주어진다. n은 1 이상 1000이하

# 점화식 D[n]=D[n-1]+2*D[n-2]
# 점화식 이유는 3 - 다이나믹 프로그래밍 참고

# 입력
n = int(input())

# 2xn 직사각형을  1×2, 2×1과 2×2 타일로 채우는 방법의 수를 넣는 배열
dp = [0]*1001

# 2x1 직사각형의 경우의 수는 1
dp[1] = 1

# 2x2 직사각형 경우의 수는 3
dp[2] = 3

# 2x1000까지 경우의 수 계산
for i in range(3, n+1):
    # 점화식
    dp[i]=dp[i-1]+(2*dp[i-2])

# 출력 : 첫째 줄에 2×n 크기의 직사각형을 채우는 방법의 수를 10,007로 나눈 나머지를 출력한다.
print(dp[n]%10007)
